{
  "hash": "e248ed4d5b9dc451a059c7225dc6461e",
  "result": {
    "markdown": "---\ndraft: false\ntitle: \"Working with the National Transit Database\"\n# subtitle: \"\"\ndate: \"2023-01-11\"\ndate-modified: \"2023-08-27\"\ncategories: [Transit, R]\nimage: \"https://www.transit.dot.gov/sites/fta.dot.gov/files/NTD_LineGraph.jpg\"\nimage-alt: \"A random chart\"\nexecute:\n  echo: true\n  error: false\n  message: false\n  warning: false\n---\n\n\nThis post is the start of a series I'll write on the [National Transit Database](https://www.transit.dot.gov/ntd) (NTD).\n\nThe NTD is a series of Excel spreadsheets released annually, around early November, by the Federal Transit Administration (FTA). For now, I'm interested specifically in [breakdowns data](https://www.transit.dot.gov/ntd/ntd-data?field_product_type_target_id=All&year=all&combine=breakdowns). In this post, I'll describe the breakdowns data set's structure and demonstrate how I clean it using R.\n\nIn later posts, I'll use NTD data to talk about transit in the US.\n\n## Getting Started\n\nI download[^1] the [2021 breakdowns dataset](https://www.transit.dot.gov/ntd/data-product/2021-breakdowns) and import it into an R session:\n\n[^1]: An enterprising young programmer could build an R/Python/etc package that automatically downloads NTD data, cleans it, and loads as a DataFrame. The `tidycensus` R package does this well for ACS and decennial Census data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)   # To clean data.\nlibrary(knitr)   # For pretty data tables.\nlibrary(readxl)  # Guess.\n\nurl = \"https://www.transit.dot.gov/sites/fta.dot.gov/files/2022-10/2021%20Breakdowns_static.xlsx\"\ntmp = tempfile()\ndownload.file(url, tmp, mode = \"wb\")\nntd = readxl::read_excel(tmp, sheet = \"Breakdowns\")\n\ndplyr::glimpse(ntd)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 1,249\nColumns: 30\n$ Agency                                             <chr> \"MTA New York City …\n$ City                                               <chr> \"Brooklyn\", \"Brookl…\n$ State                                              <chr> \"NY\", \"NY\", \"NY\", \"…\n$ `Legacy NTD ID`                                    <chr> \"2008\", \"2008\", \"20…\n$ `NTD ID`                                           <dbl> 20008, 20008, 20008…\n$ `Organization Type`                                <chr> \"Subsidiary Unit of…\n$ `Reporter Type`                                    <chr> \"Full Reporter\", \"F…\n$ `Primary UZA Population`                           <dbl> 18351295, 18351295,…\n$ `Agency VOMS`                                      <dbl> 10075, 10075, 10075…\n$ Mode                                               <chr> \"DR\", \"HR\", \"CB\", \"…\n$ `Type of Service`                                  <chr> \"PT\", \"DO\", \"DO\", \"…\n$ `Mode VOMS`                                        <dbl> 878, 5410, 433, 322…\n$ `Major Mechanical Failures`                        <dbl> 935, 2257, 440, 979…\n$ `Major Mechanical Failures Questionable`           <lgl> NA, NA, NA, NA, NA,…\n$ `Other Mechanical Failures`                        <dbl> 691, 12732, 94, 230…\n$ `Other Mechanical Failures Questionable`           <lgl> NA, NA, NA, NA, NA,…\n$ `Total Mechanical Failures`                        <dbl> 1626, 14989, 534, 1…\n$ `Total Mechanical Failures Questionable`           <lgl> NA, NA, NA, NA, NA,…\n$ `Vehicle/Passenger Car Miles`                      <dbl> 29546888, 341593245…\n$ `Vehicle/Passenger Car Miles Questionable`         <chr> NA, NA, NA, NA, NA,…\n$ `Vehicle/Passenger Car Revenue Miles`              <dbl> 23722953, 331253516…\n$ `Vehicle/Passenger Car Revenue Miles Questionable` <chr> NA, NA, NA, NA, NA,…\n$ `Train Miles`                                      <dbl> 0, 37477972, 0, 0, …\n$ `Train Miles Questionable`                         <lgl> NA, NA, NA, NA, NA,…\n$ `Train Revenue Miles`                              <dbl> 0, 36328789, 0, 0, …\n$ `Train Revenue Miles Questionable`                 <lgl> NA, NA, NA, NA, NA,…\n$ `Any Data Questionable?`                           <chr> \"No\", \"No\", \"No\", \"…\n$ ...28                                              <dbl> NA, NA, 1, NA, NA, …\n$ `0`                                                <chr> \"Hide Questionable …\n$ ...30                                              <dbl> NA, NA, 1, NA, NA, …\n```\n:::\n:::\n\n\nMy purposes need just certain fields and records:\n\n-   **Primary keys:** It's better if I demonstrate what each record represents in the next section.\n\n    -   `NTD ID`: Unique agency ID number.\n\n    -   `Mode`: Transit type. Train, plane, or automobile? I only have energy to cover a few:\n\n        -   Bus (MB)\n\n        -   Commuter Rail (CR)\n\n        -   Heavy Rail (HR)\n\n        -   Light Rail (LR)\n\n    -   `Type of Service`: Whether the transit was Purchased Transit (PT) (contracted out to a private firm) or Directly Operated (DO) (in-house).\n\n-   **Identifying info:**\n\n    -   `Agency`: Agency name and nickname/acronym, if it has one (e.g., Metra, WMATA).\n\n    -   `City`: Agency HQ municipality.\n\n    -   `State`: Agency HQ state.\n\n-   **Metrics:**\n\n    -   `Mean Miles Between Breakdowns` \\[calculated\\]: Breakdown frequency. $$\\frac{VRM}{Total Mechanical Failures}$$\n\n    -   `Total Mechanical Failures`: Breakdowns. $${Major Mechanical Failures} + {Other Mechanical Failures}$$\n\n        -   No `0` values, since this is the denominator in my calculated metric.\n\n    -   `Vehicle/Passenger Car Revenues Miles` (VRM): Total miles run in revenue service.\n\n        -   No `0` values. I only want transit that actually runs.\n\n-   **Quality flags:** Indicate data that don't meet the FTA's quality standards. `\"Q\"` if data quality is questionable. `\"W\"` if the agency didn't report this data to the FTA's standards, but the FTA gave them a waiver.\n\n    -   `Total Mechanical Failures Questionable`\n\n        -   No `\"Q\"` values.\n\n    -   `Vehicle/Passenger Car Revenue Miles Questionable`\n\n        -   No `\"Q\"` values.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nntd = ntd %>%\n  dplyr::select(\n    `NTD ID`,\n    Mode,\n    `Type of Service`,\n    Agency,\n    `HQ City` = City,\n    State,\n    dplyr::starts_with(\"Vehicle/Passenger Car Revenue Miles\"),\n    dplyr::starts_with(\"Total Mechanical Failures\")\n  ) %>%\n  dplyr::filter(\n    Mode %in% c(\"CR\", \"HR\", \"LR\", \"MB\"),\n    `Vehicle/Passenger Car Revenue Miles Questionable` %in% c(\"W\", NA_character_),\n    `Vehicle/Passenger Car Revenue Miles` > 0,\n    `Total Mechanical Failures Questionable` %in% c(\"W\", NA_character_),\n    `Total Mechanical Failures` > 0\n  ) %>%\n  dplyr::mutate(\n    # Get agency nickname only.\n    Agency = gsub(\".*dba: \", \"\", Agency),\n    `Mean Miles Between Breakdowns` = `Vehicle/Passenger Car Revenue Miles` / `Total Mechanical Failures`\n  ) %>%\n  dplyr::group_by(Mode) %>%\n  dplyr::mutate(Rank = dplyr::min_rank(dplyr::desc(`Mean Miles Between Breakdowns`))) %>%\n  dplyr::ungroup() %>%\n  dplyr::arrange(Mode, Rank)\n\nntd %>%\n  dplyr::select(Mode, Rank, Agency, `HQ City`, State, `Type of Service`, `Mean Miles Between Breakdowns`) %>%\n  dplyr::filter(Mode == \"CR\", Rank <= 10) %>%\n  dplyr::mutate(\n    `Mean Miles Between Breakdowns` = scales::comma(`Mean Miles Between Breakdowns`)\n  ) %>%\n  knitr::kable()\n```\n\n::: {.cell-output-display}\n|Mode | Rank|Agency                                            |HQ City    |State |Type of Service |Mean Miles Between Breakdowns |\n|:----|----:|:-------------------------------------------------|:----------|:-----|:---------------|:-----------------------------|\n|CR   |    1|Northern New England Passenger Rail Authority     |Portland   |ME    |PT              |2,105,053                     |\n|CR   |    2|Pennsylvania Department of Transportation         |Harrisburg |PA    |PT              |1,619,575                     |\n|CR   |    3|MTA Metro-North Railroad                          |New York   |NY    |DO              |910,686                       |\n|CR   |    4|Northern Indiana Commuter Transportation District |Chesterton |IN    |DO              |764,272                       |\n|CR   |    5|MTA Long Island Rail Road                         |Jamaica    |NY    |DO              |748,705                       |\n|CR   |    6|Metra                                             |Chicago    |IL    |DO              |536,836                       |\n|CR   |    7|Trinity Metro                                     |Fort Worth |TX    |PT              |488,962                       |\n|CR   |    8|Metra                                             |Chicago    |IL    |PT              |478,091                       |\n|CR   |    9|Caltrain                                          |San Carlos |CA    |PT              |223,990                       |\n|CR   |   10|North County Transit District                     |Oceanside  |CA    |PT              |195,749                       |\n:::\n:::\n\n\n## What Each Record Represents\n\nNote that each record is a mode-agency-service. Here's a smaller data set to demonstrate:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nntd %>%\n  dplyr::filter(\n    Mode %in% c(\"CR\", \"LR\"),\n    Agency %in% c(\"New Jersey Transit Corporation\", \"Metra\")\n  ) %>%\n  dplyr::select(Mode, Agency, `HQ City`, State, `Type of Service`, `Total Mechanical Failures`) %>%\n  knitr::kable()\n```\n\n::: {.cell-output-display}\n|Mode |Agency                         |HQ City |State |Type of Service | Total Mechanical Failures|\n|:----|:------------------------------|:-------|:-----|:---------------|-------------------------:|\n|CR   |Metra                          |Chicago |IL    |DO              |                        30|\n|CR   |Metra                          |Chicago |IL    |PT              |                        35|\n|CR   |New Jersey Transit Corporation |Newark  |NJ    |DO              |                       409|\n|LR   |New Jersey Transit Corporation |Newark  |NJ    |PT              |                       257|\n|LR   |New Jersey Transit Corporation |Newark  |NJ    |DO              |                       124|\n:::\n:::\n\n\nMetra runs 2 Commuter Rail (CR) services, one in-house (Directly Operated \\[DO\\]) and one contracted out (Purchased Transit \\[PT\\]).\n\nNJ Transit runs just 1 CR service directly, but 2 Light Rail (LR) services. The DO service is the River Line and Newark LR combined; the PT service is the Hudson-Bergen LR.\n\nHopefully this clarifies what a mode-agency-service record is.\n\n## The Big Guys\n\nI pay special attention to the largest agency-services, those running the most VRM. For each mode, I rank the 10 largest agency-services by breakdown frequency.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbiggest = ntd %>%\n  dplyr::group_by(Mode) %>%\n  dplyr::top_n(10, `Vehicle/Passenger Car Revenue Miles`) %>%\n  dplyr::mutate(`Rank, 10 Biggest` = dplyr::min_rank(dplyr::desc(`Mean Miles Between Breakdowns`))) %>%\n  dplyr::ungroup() %>%\n  dplyr::select(`NTD ID`, Mode, `Type of Service`, `Rank, 10 Biggest`)\n\nntd = dplyr::left_join(ntd, biggest, by = c(\"NTD ID\", \"Mode\", \"Type of Service\"))\n\nntd %>%\n  dplyr::filter(Mode == \"CR\", !is.na(`Rank, 10 Biggest`)) %>%\n  dplyr::select(\n    Mode,\n    `Rank, 10 Biggest`,\n    Agency,\n    `HQ City`,\n    State,\n    `Type of Service`,\n    `Mean Miles Between Breakdowns`\n  ) %>%\n  dplyr::mutate(`Mean Miles Between Breakdowns` = scales::comma(`Mean Miles Between Breakdowns`)) %>%\n  knitr::kable()\n```\n\n::: {.cell-output-display}\n|Mode | Rank, 10 Biggest|Agency                                             |HQ City      |State |Type of Service |Mean Miles Between Breakdowns |\n|:----|----------------:|:--------------------------------------------------|:------------|:-----|:---------------|:-----------------------------|\n|CR   |                1|MTA Metro-North Railroad                           |New York     |NY    |DO              |910,686                       |\n|CR   |                2|MTA Long Island Rail Road                          |Jamaica      |NY    |DO              |748,705                       |\n|CR   |                3|Metra                                              |Chicago      |IL    |DO              |536,836                       |\n|CR   |                4|Metra                                              |Chicago      |IL    |PT              |478,091                       |\n|CR   |                5|Caltrain                                           |San Carlos   |CA    |PT              |223,990                       |\n|CR   |                6|Metrolink                                          |Los Angeles  |CA    |PT              |175,324                       |\n|CR   |                7|New Jersey Transit Corporation                     |Newark       |NJ    |DO              |138,067                       |\n|CR   |                8|Southeastern Pennsylvania Transportation Authority |Philadelphia |PA    |DO              |134,939                       |\n|CR   |                9|Massachusetts Bay Transportation Authority         |Boston       |MA    |PT              |77,850                        |\n|CR   |               10|Denver Regional Transportation District            |Denver       |CO    |PT              |19,564                        |\n:::\n:::\n\n\nAnd that's it. I'll post my full rankings soon. In another upcoming post I'll cover why I'm doing this in the first place.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}